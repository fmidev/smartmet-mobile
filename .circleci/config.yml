version: 2
jobs:
  node:
    working_directory: ~/smartmet-mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: yarn install
          command: |
            yarn install
 
 #     - run:
 #         name: jest tests
 #         command: |
 #           mkdir -p test-results/jest
 #           yarn run test
 #         environment:
 #           JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/smartmet-mobile
          paths:
            - node_modules

#      - store_test_results:
#          path: test-results

#      - store_artifacts:
#          path: test-results

  android:
    working_directory: ~/smartmet-mobile/android
    docker:
      - image: circleci/android:api-28-node
    resource_class: medium+
    steps:
      - checkout:
          path: ~/smartmet-mobile

      - attach_workspace:
          at: ~/smartmet-mobile

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: Fastlane Tests
          command: |
            mkdir -p test-results/fastlane
            bundle exec fastlane test
            mv fastlane/report.xml test-results/fastlane

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  ios:
    macos:
      xcode: "11.4"
    environment:
      FL_OUTPUT_DIR: output
    working_directory: ~/smartmet-mobile

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run:
          name: yarn install
          command: |
            yarn global add react-native-cli
            yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: pod install
          working_directory: ios
      
      - run:
          command: bundle exec fastlane beta
          working_directory: ios

#      - run:
#          name: set up test results
#          working_directory: ios
#          when: always
#          command: |
#            mkdir -p test-results/fastlane test-results/xcode
#            mv fastlane/report.xml test-results/fastlane
#            mv fastlane/test_output/report.junit test-results/xcode/junit.xml

#      - store_test_results:
#          path: ios/test-results

      - store_artifacts:
          path: output

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android:
          requires:
            - node
      - ios:
          requires:
            - node
